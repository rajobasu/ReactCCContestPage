{"ast":null,"code":"var _jsxFileName = \"/Users/rajobasu/Desktop/react_tut/src/Pages/ProblemDisplayPage/ProblemDisplayPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { isLoggedIn } from \"../../APICalls/LoginHandler\";\nimport { getProblemDetails, getSubmissionForProblem, getLanguages } from \"../../APICalls/API\";\nimport { Redirect } from \"react-router-dom\";\nimport StickyHeadTable from \"./Table\";\nimport Header from \"../../components/Header\";\nimport { Link, Grid, Typography, TextareaAutosize } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport OnlineEditor from \"../../components/OnlineEditor/OnlineEditor\";\nexport default function SpecificContestPage(props) {\n  const [hasbeenLoggedIn, setLoggedIn] = useState(0);\n  const [problemDetails, setProblemDetails] = useState(0);\n  const [submissions, setSubmission] = useState(0);\n  const [lanugages, setLanguage] = useState(0);\n\n  function logincallback(val) {\n    setLoggedIn(val);\n  }\n\n  function handleLogout() {\n    logincallback(1);\n  }\n\n  useEffect(() => {\n    isLoggedIn(logincallback);\n  });\n\n  function problemDetailsCallback(problemDetails) {\n    console.log(\"Finally got called back in problem display page\");\n    console.log(problemDetails);\n    setProblemDetails(problemDetails);\n  }\n\n  function getSubmissionsCallBack(submissions) {\n    setSubmission(submissions.content);\n  }\n\n  function languageCallBack(languages) {\n    setLanguage(languages);\n  }\n\n  useEffect(() => {\n    getProblemDetails(problemDetailsCallback, props.match.params.contestCode, props.match.params.problemCode);\n    getSubmissionForProblem(getSubmissionsCallBack, props.match.params.problemCode);\n    getLanguages(langaugeCallBack);\n  }, []);\n\n  if (hasbeenLoggedIn === 1) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (hasbeenLoggedIn === 0 || problemDetails === 0 || submissions === 0) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    }, \"LOADING\");\n  }\n\n  if (problemDetails === null) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 12\n      }\n    }, \"Error occurred, Refresh Page\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    hasbeenLoggedIn: hasbeenLoggedIn,\n    logoutHandler: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    href: \"/contestpage/\" + props.match.params.contestCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Go Back to Contest\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: false,\n    sm: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    \"align-content\": \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, problemDetails.problemName), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, problemDetails.body)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, (() => {\n    if (submissions !== undefined) return /*#__PURE__*/React.createElement(StickyHeadTable, {\n      submissions: submissions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 30\n      }\n    });\n  })()))), (() => {\n    if (languages !== 0) {\n      return /*#__PURE__*/React.createElement(OnlineEditor, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 24\n        }\n      });\n    }\n  })()))));\n}","map":{"version":3,"sources":["/Users/rajobasu/Desktop/react_tut/src/Pages/ProblemDisplayPage/ProblemDisplayPage.js"],"names":["React","useState","useEffect","isLoggedIn","getProblemDetails","getSubmissionForProblem","getLanguages","Redirect","StickyHeadTable","Header","Link","Grid","Typography","TextareaAutosize","makeStyles","OnlineEditor","SpecificContestPage","props","hasbeenLoggedIn","setLoggedIn","problemDetails","setProblemDetails","submissions","setSubmission","lanugages","setLanguage","logincallback","val","handleLogout","problemDetailsCallback","console","log","getSubmissionsCallBack","content","languageCallBack","languages","match","params","contestCode","problemCode","langaugeCallBack","problemName","body","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { isLoggedIn } from \"../../APICalls/LoginHandler\";\nimport {\n  getProblemDetails,\n  getSubmissionForProblem,\n  getLanguages,\n} from \"../../APICalls/API\";\nimport { Redirect } from \"react-router-dom\";\nimport StickyHeadTable from \"./Table\";\nimport Header from \"../../components/Header\";\nimport { Link, Grid, Typography, TextareaAutosize } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport OnlineEditor from \"../../components/OnlineEditor/OnlineEditor\";\n\nexport default function SpecificContestPage(props) {\n  const [hasbeenLoggedIn, setLoggedIn] = useState(0);\n  const [problemDetails, setProblemDetails] = useState(0);\n  const [submissions, setSubmission] = useState(0);\n  const [lanugages, setLanguage] = useState(0);\n\n  function logincallback(val) {\n    setLoggedIn(val);\n  }\n\n  function handleLogout() {\n    logincallback(1);\n  }\n\n  useEffect(() => {\n    isLoggedIn(logincallback);\n  });\n\n  function problemDetailsCallback(problemDetails) {\n    console.log(\"Finally got called back in problem display page\");\n    console.log(problemDetails);\n    setProblemDetails(problemDetails);\n  }\n\n  function getSubmissionsCallBack(submissions) {\n    setSubmission(submissions.content);\n  }\n\n  function languageCallBack(languages) {\n    setLanguage(languages);\n  }\n\n  useEffect(() => {\n    getProblemDetails(\n      problemDetailsCallback,\n      props.match.params.contestCode,\n      props.match.params.problemCode\n    );\n    getSubmissionForProblem(\n      getSubmissionsCallBack,\n      props.match.params.problemCode\n    );\n    getLanguages(langaugeCallBack);\n  }, []);\n\n  if (hasbeenLoggedIn === 1) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n\n  if (hasbeenLoggedIn === 0 || problemDetails === 0 || submissions === 0) {\n    return <h1>LOADING</h1>;\n  }\n\n  if (problemDetails === null) {\n    return <h1>Error occurred, Refresh Page</h1>;\n  }\n\n  return (\n    <React.Fragment>\n      <Header hasbeenLoggedIn={hasbeenLoggedIn} logoutHandler={handleLogout} />\n      <Link href={\"/contestpage/\" + props.match.params.contestCode}>\n        Go Back to Contest\n      </Link>\n      <Grid container>\n        <Grid item xs={false} sm={1}></Grid>\n        <Grid item xs={10}>\n          <Grid container direction=\"column\">\n            <Grid item>\n              <Grid container spacing={2} align-content={\"space-between\"}>\n                <Grid item xs={12} sm={7}>\n                  <Typography variant=\"h3\">\n                    {problemDetails.problemName}\n                  </Typography>\n                  <Typography>{problemDetails.body}</Typography>\n                </Grid>\n                <Grid item xs={12} sm={5}>\n                  {(() => {\n                    if (submissions !== undefined)\n                      return <StickyHeadTable submissions={submissions} />;\n                  })()}\n                </Grid>\n              </Grid>\n            </Grid>\n            {(() => {\n              if (languages !== 0) {\n                return <OnlineEditor />;\n              }\n            })()}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}