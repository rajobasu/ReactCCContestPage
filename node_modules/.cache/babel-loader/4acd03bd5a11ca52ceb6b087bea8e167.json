{"ast":null,"code":"var _jsxFileName = \"/Users/rajobasu/Desktop/react_tut/src/Pages/ContestDisplayPage/ContestDisplayPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { isLoggedIn } from \"../../APICalls/LoginHandler\";\nimport { getContestDetails } from \"../../APICalls/API\";\nimport { Redirect } from \"react-router-dom\";\nimport ContestDisplay from \"../../components/DisplayTable\";\nimport Header from \"../../components/Header\";\nimport { Grid } from \"@material-ui/core\";\nexport default function ContestDisplayPage(props) {\n  const [hasbeenLoggedIn, setLoggedIn] = useState(0);\n  const [contestDetails, setContestDetails] = useState(0);\n\n  function logincallback(val) {\n    setLoggedIn(val);\n  }\n\n  function handleLogout() {\n    logincallback(1);\n  }\n\n  useEffect(() => {\n    isLoggedIn(logincallback);\n  });\n\n  function contestDetailsCallback(contestDetails) {\n    console.log(\"Finally got called back\");\n    console.log(contestDetails);\n    setContestDetails(contestDetails);\n  }\n\n  useEffect(() => {\n    getContestDetails(contestDetailsCallback, props.match.params.contestCode);\n  }, []);\n\n  if (hasbeenLoggedIn === 0 || contestDetails === 0) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    }, \"LOADING\");\n  }\n\n  if (hasbeenLoggedIn === 1) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    hasbeenLoggedIn: hasbeenLoggedIn,\n    logoutHandler: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 0,\n    sm: 1,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    sm: 10,\n    md: 8,\n    column: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ContestDisplay, {\n    contestDetails: contestDetails,\n    contestcode: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Hi\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 0,\n    sm: 1,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/rajobasu/Desktop/react_tut/src/Pages/ContestDisplayPage/ContestDisplayPage.js"],"names":["React","useState","useEffect","isLoggedIn","getContestDetails","Redirect","ContestDisplay","Header","Grid","ContestDisplayPage","props","hasbeenLoggedIn","setLoggedIn","contestDetails","setContestDetails","logincallback","val","handleLogout","contestDetailsCallback","console","log","match","params","contestCode"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { isLoggedIn } from \"../../APICalls/LoginHandler\";\nimport { getContestDetails } from \"../../APICalls/API\";\nimport { Redirect } from \"react-router-dom\";\nimport ContestDisplay from \"../../components/DisplayTable\";\nimport Header from \"../../components/Header\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function ContestDisplayPage(props) {\n  const [hasbeenLoggedIn, setLoggedIn] = useState(0);\n  const [contestDetails, setContestDetails] = useState(0);\n\n  function logincallback(val) {\n    setLoggedIn(val);\n  }\n\n  function handleLogout() {\n    logincallback(1);\n  }\n\n  useEffect(() => {\n    isLoggedIn(logincallback);\n  });\n\n  function contestDetailsCallback(contestDetails) {\n    console.log(\"Finally got called back\");\n    console.log(contestDetails);\n    setContestDetails(contestDetails);\n  }\n\n  useEffect(() => {\n    getContestDetails(contestDetailsCallback, props.match.params.contestCode);\n  }, []);\n\n  if (hasbeenLoggedIn === 0 || contestDetails === 0) {\n    return <h1>LOADING</h1>;\n  }\n\n  if (hasbeenLoggedIn === 1) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n\n  return (\n    <React.Fragment>\n      <Header hasbeenLoggedIn={hasbeenLoggedIn} logoutHandler={handleLogout} />\n      <Grid container>\n        <Grid item xs={0} sm={1} md={2}></Grid>\n        <Grid container xs={12} sm={10} md={8} column>\n          <Grid item>\n            <ContestDisplay contestDetails={contestDetails} contestcode />\n          </Grid>\n          <Grid item>\n            <h1>Hi</h1>\n          </Grid>\n        </Grid>\n        <Grid item xs={0} sm={1} md={2}></Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}