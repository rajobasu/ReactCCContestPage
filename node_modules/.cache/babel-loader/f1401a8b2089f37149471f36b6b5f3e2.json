{"ast":null,"code":"import axios from \"axios\";\nconst backendURL = \"http://localhost:8080/api\";\n/**\n * This is just used to check whether the user is still logged in properly or not.\n * If its not, then dont make a second callback.\n */\n\nfunction isValid() {}\n\nexport function getContestList(callback) {\n  axios.get(backendURL + \"/contestlist\", {\n    withCredentials: true\n  }).then(response => {\n    callback(response.data);\n  }).catch(Error => console.log(Error));\n}\nexport function getContestDetails(callback, contestCode) {\n  axios.get(backendURL + \"/contestpage/\" + contestCode, {\n    withCredentials: true\n  }).then(response => {\n    callback(response.data);\n  }).catch(Error => console.log(Error));\n}\nexport function getProblemDetails(callback, contestCode, problemCode) {\n  const actualURL = backendURL + \"/contestpage/\" + contestCode + \"/problems/\" + problemCode;\n  console.log(actualURL);\n  axios.get(actualURL, {\n    withCredentials: true\n  }).then(response => {\n    callback(response.data);\n  }).catch(Error => console.log(Error));\n}\nexport function getContestRanklist(callback, contestCode) {\n  axios.get(backendURL + \"/ranklist/\" + contestCode, {\n    withCredentials: true\n  }).then(response => {\n    callback(response.data);\n  }).catch(Error => console.log(Error));\n}\nexport function getSubmission(callback, contestCode, username) {\n  const actualURL = backendURL + \"/submissions/\" + contestCode + \"/user/\" + username;\n  console.log(actualURL);\n  axios.get(actualURL, {\n    withCredentials: true\n  }).then(response => {\n    console.log(response.data);\n    callback(response.data);\n  }).catch(Error => console.log(Error));\n}\nexport function getSubmissionForProblem(callback, problemCode) {\n  const actualURL = backendURL + \"/submissions/\" + problemCode;\n  console.log(actualURL);\n  axios.get(actualURL, {\n    withCredentials: true\n  }).then(response => {\n    console.log(response.data);\n    callback(response.data);\n  }).catch(Error => console.log(Error));\n}\nexport function getLanguages(callback) {\n  const actualURL = backendURL + \"/languages\";\n  console.log(actualURL);\n  axios.get(actualURL, {\n    withCredentials: true\n  }).then(response => {\n    console.log(response.data);\n    callback(response.data);\n  }).catch(Error => console.log(Error));\n}\nexport function submitCode(callback, src, tc, lng) {\n  const actualURL = backendURL + \"/submit\";\n  const params = new URLSearchParams();\n  params.append(\"sourceCode\", src);\n  params.append(\"testCase\", tc);\n  params.append(\"language\", lng);\n  axios({\n    method: \"post\",\n    url: actualURL,\n    data: params,\n    withCredentials: true\n  }).then(response => {\n    console.log(response.data);\n    callback(response.data.link);\n  }).catch(Error => console.log(Error));\n  return;\n}\nexport function getProblemStatus(callback, link) {\n  const actualURL = backendURL + \"/getsubmitstatus/\" + link;\n  console.log(actualURL);\n  axios.get(actualURL, {\n    withCredentials: true\n  }).then(response => {\n    console.log(response.data);\n    callback(response.data);\n  }).catch(Error => console.log(Error));\n}","map":{"version":3,"sources":["/Users/rajobasu/Desktop/react_tut/src/APICalls/API.js"],"names":["axios","backendURL","isValid","getContestList","callback","get","withCredentials","then","response","data","catch","Error","console","log","getContestDetails","contestCode","getProblemDetails","problemCode","actualURL","getContestRanklist","getSubmission","username","getSubmissionForProblem","getLanguages","submitCode","src","tc","lng","params","URLSearchParams","append","method","url","link","getProblemStatus"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nconst backendURL = \"http://localhost:8080/api\";\n\n/**\n * This is just used to check whether the user is still logged in properly or not.\n * If its not, then dont make a second callback.\n */\nfunction isValid() {}\n\nexport function getContestList(callback) {\n  axios\n    .get(backendURL + \"/contestlist\", { withCredentials: true })\n    .then((response) => {\n      callback(response.data);\n    })\n    .catch((Error) => console.log(Error));\n}\n\nexport function getContestDetails(callback, contestCode) {\n  axios\n    .get(backendURL + \"/contestpage/\" + contestCode, { withCredentials: true })\n    .then((response) => {\n      callback(response.data);\n    })\n    .catch((Error) => console.log(Error));\n}\nexport function getProblemDetails(callback, contestCode, problemCode) {\n  const actualURL =\n    backendURL + \"/contestpage/\" + contestCode + \"/problems/\" + problemCode;\n  console.log(actualURL);\n  axios\n    .get(actualURL, { withCredentials: true })\n    .then((response) => {\n      callback(response.data);\n    })\n    .catch((Error) => console.log(Error));\n}\n\nexport function getContestRanklist(callback, contestCode) {\n  axios\n    .get(backendURL + \"/ranklist/\" + contestCode, { withCredentials: true })\n    .then((response) => {\n      callback(response.data);\n    })\n    .catch((Error) => console.log(Error));\n}\n\nexport function getSubmission(callback, contestCode, username) {\n  const actualURL =\n    backendURL + \"/submissions/\" + contestCode + \"/user/\" + username;\n  console.log(actualURL);\n  axios\n    .get(actualURL, {\n      withCredentials: true,\n    })\n    .then((response) => {\n      console.log(response.data);\n      callback(response.data);\n    })\n    .catch((Error) => console.log(Error));\n}\n\nexport function getSubmissionForProblem(callback, problemCode) {\n  const actualURL = backendURL + \"/submissions/\" + problemCode;\n  console.log(actualURL);\n  axios\n    .get(actualURL, {\n      withCredentials: true,\n    })\n    .then((response) => {\n      console.log(response.data);\n      callback(response.data);\n    })\n    .catch((Error) => console.log(Error));\n}\n\nexport function getLanguages(callback) {\n  const actualURL = backendURL + \"/languages\";\n  console.log(actualURL);\n  axios\n    .get(actualURL, {\n      withCredentials: true,\n    })\n    .then((response) => {\n      console.log(response.data);\n      callback(response.data);\n    })\n    .catch((Error) => console.log(Error));\n}\n\nexport function submitCode(callback, src, tc, lng) {\n  const actualURL = backendURL + \"/submit\";\n\n  const params = new URLSearchParams();\n  params.append(\"sourceCode\", src);\n  params.append(\"testCase\", tc);\n  params.append(\"language\", lng);\n\n  axios({\n    method: \"post\",\n    url: actualURL,\n    data: params,\n    withCredentials: true,\n  })\n    .then((response) => {\n      console.log(response.data);\n      callback(response.data.link);\n    })\n    .catch((Error) => console.log(Error));\n  return;\n}\n\nexport function getProblemStatus(callback, link) {\n  const actualURL = backendURL + \"/getsubmitstatus/\" + link;\n\n  console.log(actualURL);\n  axios\n    .get(actualURL, {\n      withCredentials: true,\n    })\n    .then((response) => {\n      console.log(response.data);\n      callback(response.data);\n    })\n    .catch((Error) => console.log(Error));\n}\n"]},"metadata":{},"sourceType":"module"}